name: "publish-manual-dev"
on:
  workflow_dispatch:

permissions:
  contents: write # for checkout and tag
  pull-requests: write # for comments
  packages: write # for publish

env:
  sdk_version: "latest"
  APPHUB_URL: "https://apphub-dev.swimlane.io"

jobs:
  publish-manual-dev:
    if: github.event.repository.is_template == false
    name: publish-manual-dev
    strategy:
      matrix:
        PYTHON_VERSION: [3.6, 3.7]
    runs-on: self-hosted
    outputs:
      version: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - name: setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: "https://registry.npmjs.org"

      - name: Install swsdk
        run: |
          npm install -g @swimlane/swimlane-sdk@${{ env.sdk_version }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install swsdk plugins
        run: |
          swsdk plugins:install @swimlane/swsdk-apphub@${{ env.sdk_version }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.13
        with:
          versionSpec: "5.9"

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Load package info
        id: pjson
        uses: zoexx/github-action-json-file-properties@release
        with:
          file_path: "package.json"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.13
        with:
          useConfigFile: true
          additionalArguments: "/overrideconfig next-version=${{steps.pjson.outputs.version}}"

      - name: Create Folder
        run: mkdir output

      - name: Validate Integration
        run: |
          swsdk integration:validate -v=${{matrix.PYTHON_VERSION}}

      - name: Update versions
        id: updateVersions
        run: |
          swsdk integration:update --version ${{ steps.gitversion.outputs.semVer}}

      - name: Build Integration
        run: |
          swsdk integration:build -v=${{matrix.PYTHON_VERSION}}

      - name: Push to AppHub
        if: ${{steps.pjson.outputs.private != 'true'}}
        run: |
          find output -name '*.swimbundle' -exec sh -c 'swsdk apphub:push -u "${{ secrets.APPHUB_DEV_USERNAME }}" -p "${{ secrets.APPHUB_DEV_PASSWORD }}" --log-level debug --base-url ${{env.APPHUB_URL}} -f "$0"' {} \;

      - name: Create Dev Bundle
        if: ${{ steps.gitversion.outputs.preReleaseLabel != '' }}
        run: find output -name '*.swimbundle' -exec sh -c 'mv "$0" "${0%.swimbundle}.dev.swimbundle"' {} \;

      - name: Archive integration
        uses: actions/upload-artifact@v2
        with:
          name: integration
          path: |
            output/**/*.swimbundle

  publish-release:
    runs-on: ubuntu-latest
    needs: publish-manual-dev
    name: "publish-release-dev"
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.0

      - name: Display structure of downloaded files
        run: ls -R

      - name: Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          title: "${{ needs.publish-manual-dev.outputs.version }}"
          automatic_release_tag: "${{ needs.publish-manual-dev.outputs.version  }}"
          prerelease: true
          files: |
            integration/**/*.swimbundle
          repo_token: ${{ secrets.GITHUB_TOKEN }}
